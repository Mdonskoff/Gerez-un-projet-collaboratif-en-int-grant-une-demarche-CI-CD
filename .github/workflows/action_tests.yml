name : Tests coverage

on : 
  push : 
    branches : 
      - main
  pull_request :
    branches :
      - main

jobs :
  build_back:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: back #se mettre dans le dossier back de github pour exécuter
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B clean package --file pom.xml #clean avant l'install des packages
    - name: Run backend tests with coverage
      run: mvn jacoco:report # Génère le rapport de couverture avec JaCoCo

    - name: Upload backend coverage report as artifact
      uses: actions/upload-artifact@v4
      with:
        name: back_coverage
        path: back/target/site/jacoco # Chemin vers les fichiers de couverture JaCoCo

      
  build_front:

    runs-on: ubuntu-latest
    needs: build_back # Le frontend ne démarre que si le backend a terminé

    defaults:
          run:
            working-directory: front
    steps:
        - name: Checkout repository
          uses: actions/checkout@v4
    
        - name: Set up Node.js
          uses: actions/setup-node@v4
          with:
            node-version: '16'
    
        - name: Install dependencies
          run:  npm install
    
        - name: Run tests and generate coverage report
          run: npm run test_coverage # Exécute les tests et génère le rapport de couverture

        - name: Upload frontend coverage report as artifact
          uses: actions/upload-artifact@v4
          with:
            name: front_coverage
            path: front/coverage/bobapp # Chemin vers les fichiers de couverture générés par Angular

  back_sonar:
  
    name: Build and analyze back
    runs-on: ubuntu-latest
    needs: build_front
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
          
      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
          
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
          
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          cd back
          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Mdonskoff_Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD

  front_sonar:
  
    name: Build and analyze front
    runs-on: ubuntu-latest
    needs: back_sonar
    defaults:
      run:
        working-directory: front
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Run tests and generate coverage report
        run: npm run test_coverage
        
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
            projectBaseDir: front/ # dans le dossier front
            args: -Dsonar.typescript.lcov.reportPaths=coverage/bobapp/lcov.info    

  build_docker_back:

    runs-on: ubuntu-latest
    needs: front_sonar
    steps:

      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ./back
          file: back/Docketfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/bobapp_back:latest
